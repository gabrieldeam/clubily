"""reward store full

Revision ID: 2ce98bd56ecb
Revises: 0eb07777de4b
Create Date: 2025-07-04 22:00:41.301125

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2ce98bd56ecb'
down_revision: Union[str, None] = '0eb07777de4b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('reward_products',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=False),
    sa.Column('short_desc', sa.String(length=255), nullable=True),
    sa.Column('long_desc', sa.Text(), nullable=True),
    sa.Column('points_cost', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(length=255), nullable=True),
    sa.Column('pdf_url', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sku')
    )
    op.create_table('reward_orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'refused', name='orderstatus'), nullable=False),
    sa.Column('refusal_msg', sa.String(length=255), nullable=True),
    sa.Column('recipient', sa.String(length=120), nullable=False),
    sa.Column('street', sa.String(length=120), nullable=False),
    sa.Column('number', sa.String(length=20), nullable=False),
    sa.Column('neighborhood', sa.String(length=120), nullable=False),
    sa.Column('city', sa.String(length=120), nullable=False),
    sa.Column('state', sa.String(length=2), nullable=False),
    sa.Column('postal_code', sa.String(length=10), nullable=False),
    sa.Column('complement', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reward_product_categories',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['reward_categories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['reward_products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id', 'category_id')
    )
    op.create_table('reward_order_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['reward_orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['reward_products.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_unique_constraint(None, 'reward_categories', ['name'])
    op.create_unique_constraint(None, 'reward_categories', ['slug'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'reward_categories', type_='unique')
    op.drop_constraint(None, 'reward_categories', type_='unique')
    op.drop_table('reward_order_items')
    op.drop_table('reward_product_categories')
    op.drop_table('reward_orders')
    op.drop_table('reward_products')
    # ### end Alembic commands ###
